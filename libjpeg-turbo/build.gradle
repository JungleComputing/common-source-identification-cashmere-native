plugins {
}

repositories {
    ivy {
        url 'https://github.com'
        layout 'pattern', {
            artifact '/[organisation]/[module]/archive/[revision].[ext]'
        }
    }
}

configurations {
   githubrelease
}

dependencies {
    //This maps to the pattern: [organisation]:[module]:[revision]:[classifier]@[ext]         
    githubrelease 'libjpeg-turbo:libjpeg-turbo:1.5.2@tar.gz'
}

def getLibJPEG(prop) {
    return configurations.githubrelease.getProperty(prop).find { it.name.startsWith("libjpeg") }
}

task untar(type: Copy) {
    def tarPath = getLibJPEG("files")
    def tarFile = file(tarPath)
    def outputDir = file("${buildDir}")
    def path = getLibJPEG("dependencies").name + "-" + getLibJPEG("dependencies").version

    outputs.dir(path)

    from tarTree(tarFile)
    into outputDir
}

task autoreconf(type:Exec, dependsOn: 'untar') {
    def path = getLibJPEG("dependencies").name + "-" + getLibJPEG("dependencies").version
    commandLine = ['autoreconf', '-vfi']
    workingDir = "$project.buildDir/$path"
    outputs.file("${project.buildDir}/$path/aclocal.m4")
    outputs.file("${project.buildDir}/$path/ar-lib")
    outputs.file("${project.buildDir}/$path/compile")
    outputs.file("${project.buildDir}/$path/config.guess")
    outputs.file("${project.buildDir}/$path/config.h.in")
    outputs.file("${project.buildDir}/$path/config.sub")
    outputs.file("${project.buildDir}/$path/configure")
    outputs.file("${project.buildDir}/$path/depcomp")
    outputs.file("${project.buildDir}/$path/install-sh")
}

task configure(type:Exec, dependsOn: 'autoreconf') {
    def path = getLibJPEG("dependencies").name + "-" + getLibJPEG("dependencies").version
    commandLine = ['./configure']
    workingDir = "$project.buildDir/$path"
    outputs.file("${project.buildDir}/$path/Makefile")
    outputs.file("${project.buildDir}/$path/config.h")
}

task buildNative(type:Exec, group: "Build native code", description: "Assembles this project", dependsOn: 'configure') {
    def path = getLibJPEG("dependencies").name + "-" + getLibJPEG("dependencies").version
    commandLine = ['make']
    workingDir = "$project.buildDir/$path"
    outputs.files("$project.buildDir/$path/.libs/libjpeg.so.62.2.0")
}

